#title
  %h1 Art Test

#game_container
  #game_info
    %span#health_label health
    #progress_bar
      #health
    #score_holder
      %span#score_label score
      %span#score 0
  %canvas#gameCanvas{:width => 640, :height => 480}
    %p
      HTML5 canvas not supported by your browser.
      = link "Learn more here", "http://www.google.com/chrome"

:javascript
  var rotate = false;
  $('#gameCanvas').powerCanvas({init: function(canvas) {
    var objects = [
      GameObject({x: 10, y: 10, sprite: loadImageTile("images/effects/playerbullet1.png")}),
      GameObject({x: 10, y: 20, sprite: loadImageTile("images/effects/playerbullet1_small.png")}),
      GameObject({x: 10, y: 30, sprite: loadImageTile("images/effects/enemybullet1.png")}),
      GameObject({x: 10, y: 40, sprite: loadImageTile("images/effects/enemybullet1_small.png")}),
      GameObject({x: 10, y: 60, sprite: loadAnimation("images/effects/bloodEffect1_8x8.png", 8, 8, 8)}),
      GameObject({x: 10, y: 80, sprite: loadAnimation("images/effects/bloodEffect2_8x8.png", 8, 8, 8)}),
      GameObject({x: 10, y: 100, sprite: loadAnimation("images/effects/dirtEffect1_8x8.png", 8, 8, 8)}),
      GameObject({x: 10, y: 120, sprite: loadAnimation("images/effects/sparkEffect1_8x8.png", 6, 8, 8)}),
      GameObject({x: 50, y: 60, sprite: loadAnimation("images/effects/bloodEffect3_16x16.png", 9, 16, 16)}),
      GameObject({x: 50, y: 80, sprite: loadAnimation("images/effects/bloodEffect4_16x16.png", 9, 16, 16)}),
      GameObject({x: 50, y: 100, sprite: loadAnimation("images/effects/dirtEffect2_16x16.png", 11, 16, 16)}),
      GameObject({x: 50, y: 120, sprite: loadAnimation("images/effects/sparkEffect2_16x16.png", 6, 16, 16)}),
      GameObject({x: 100, y: 50, sprite: loadAnimation("images/projectiles/explosion.png", 5, 46, 46, 2)}),
    ];

    // Rotation testing
    if(false) {
      $.each(objects, function(i, object) {
        var t = 0;
        object.extend({
          getTransform: function() {
            return rotationTransform(this.angle);
          },
          after: {
            update: function() {
              t++;
              this.angle = t * Math.PI / 48
            }
          }
        });
      });
    }

    setInterval(function() {
      canvas.fill('#000');

      $.each(objects, function(i, object) {
        object.update();
        object.draw(canvas);
      });
    }, 33);
  }});
