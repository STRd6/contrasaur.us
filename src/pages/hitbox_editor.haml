#title
  %h1 Hitbox Editor

#game_container
  #game_info
    %span#health_label health
    #progress_bar
      #health
    #score_holder
      %span#score_label score
      %span#score 0
  %canvas#gameCanvas{:width => 640, :height => 480}
    %p
      HTML5 canvas not supported by your browser.
      = link "Learn more here", "http://www.google.com/chrome"

#controls
  %input{:class => 'ui', :type => 'button', :value => 'increase'}
  %input{:class => 'ui', :type => 'button', :value => 'decrease'}
  %input{:class => 'ui', :type => 'button', :value => 'left'}
  %input{:class => 'ui', :type => 'button', :value => 'right'}
  %input{:class => 'ui', :type => 'button', :value => 'up'}
  %input{:class => 'ui', :type => 'button', :value => 'down'}

:javascript
  var transform = Matrix.translation(320, 240);
  var animation = loadAnimation("images/contrasaurus/walk.png", 8, 283, 163, 3);
  var currentFrame = 0;
  var activeCircle;
  var activeColor = "rgba(255, 0, 255, 0.5)";
  var circleColor = "rgba(255, 0, 0, 0.5)";
  var frameCircles = [
    [{"x":87,"y":-52,"radius":27},{"x":13,"y":-10,"radius":37},{"x":117,"y":-45,"radius":24},{"x":50,"y":-38,"radius":19},{"x":-27,"y":-12,"radius":25},{"x":-60,"y":-2,"radius":18},{"x":-89,"y":5,"radius":14},{"x":-113,"y":10,"radius":12},{"x":-2,"y":35,"radius":20},{"x":0,"y":64,"radius":18},{"x":24,"y":72,"radius":10},{"x":39,"y":73,"radius":8},{"x":-130,"y":11,"radius":8}],
    [{"x":87,"y":-52,"radius":27},{"x":12,"y":-8,"radius":41},{"x":117,"y":-45,"radius":24},{"x":50,"y":-38,"radius":19},{"x":-22,"y":-13,"radius":26},{"x":-60,"y":-2,"radius":18},{"x":-89,"y":5,"radius":14},{"x":-112,"y":10,"radius":12},{"x":-130,"y":10,"radius":8},{"x":26,"y":39,"radius":9},{"x":-19,"y":43,"radius":10},{"x":69,"y":63,"radius":14},{"x":-16,"y":65,"radius":18},{"x":-9,"y":28,"radius":10},{"x":48,"y":56,"radius":9},{"x":9,"y":73,"radius":10},{"x":35,"y":50,"radius":8}],
    [{"x":87,"y":-53,"radius":27},{"x":12,"y":-9,"radius":38},{"x":118,"y":-45,"radius":23},{"x":50,"y":-38,"radius":19},{"x":-21,"y":-12,"radius":28},{"x":-60,"y":-6,"radius":18},{"x":-88,"y":0,"radius":14},{"x":-113,"y":1,"radius":12},{"x":-127,"y":0,"radius":8},{"x":-37,"y":59,"radius":25},{"x":51,"y":70,"radius":12},{"x":-34,"y":31,"radius":11},{"x":35,"y":19,"radius":12},{"x":42,"y":53,"radius":10},{"x":37,"y":37,"radius":8},{"x":89,"y":60,"radius":10},{"x":67,"y":71,"radius":7},{"x":79,"y":67,"radius":7},{"x":-18,"y":24,"radius":8}],
    [{"x":85,"y":-54,"radius":27},{"x":9,"y":-6,"radius":42},{"x":117,"y":-45,"radius":24},{"x":49,"y":-36,"radius":18},{"x":-26,"y":-4,"radius":31},{"x":-60,"y":-5,"radius":17},{"x":-88,"y":2,"radius":15},{"x":-112,"y":4,"radius":12},{"x":-130,"y":2,"radius":7},{"x":28,"y":74,"radius":9},{"x":-84,"y":63,"radius":18},{"x":13,"y":44,"radius":10},{"x":18,"y":61,"radius":8},{"x":67,"y":74,"radius":9},{"x":43,"y":76,"radius":7},{"x":54,"y":76,"radius":6},{"x":-66,"y":48,"radius":8},{"x":-47,"y":27,"radius":8},{"x":-60,"y":34,"radius":10}],
    [{"x":86,"y":-53,"radius":27},{"x":13,"y":-10,"radius":37},{"x":117,"y":-45,"radius":24},{"x":50,"y":-38,"radius":19},{"x":-27,"y":-12,"radius":25},{"x":-60,"y":-2,"radius":18},{"x":-87,"y":6,"radius":15},{"x":-112,"y":10,"radius":13},{"x":-130,"y":12,"radius":8},{"x":-2,"y":64,"radius":20},{"x":-7,"y":34,"radius":20},{"x":37,"y":73,"radius":11},{"x":20,"y":74,"radius":9}],
    [{"x":87,"y":-52,"radius":27},{"x":13,"y":-11,"radius":38},{"x":118,"y":-43,"radius":24},{"x":49,"y":-39,"radius":19},{"x":-25,"y":-14,"radius":24},{"x":-60,"y":-3,"radius":17},{"x":-89,"y":5,"radius":14},{"x":-112,"y":8,"radius":11},{"x":-129,"y":9,"radius":7},{"x":-11,"y":58,"radius":25},{"x":4,"y":40,"radius":27},{"x":80,"y":65,"radius":12},{"x":66,"y":54,"radius":11},{"x":37,"y":52,"radius":10},{"x":49,"y":54,"radius":10}],
    [{"x":86,"y":-53,"radius":27},{"x":12,"y":-8,"radius":41},{"x":117,"y":-45,"radius":24},{"x":50,"y":-38,"radius":19},{"x":-24,"y":-13,"radius":25},{"x":-60,"y":-6,"radius":18},{"x":-86,"y":-2,"radius":15},{"x":-109,"y":0,"radius":12},{"x":-127,"y":-1,"radius":8},{"x":-40,"y":59,"radius":25},{"x":56,"y":72,"radius":12},{"x":-33,"y":31,"radius":11},{"x":-18,"y":25,"radius":7},{"x":37,"y":27,"radius":10},{"x":36,"y":44,"radius":10},{"x":43,"y":59,"radius":8},{"x":74,"y":67,"radius":9},{"x":90,"y":57,"radius":11}],
    [{"x":85,"y":-54,"radius":27},{"x":5,"y":-5,"radius":44},{"x":117,"y":-45,"radius":24},{"x":50,"y":-37,"radius":19},{"x":-33,"y":1,"radius":33},{"x":-62,"y":-5,"radius":18},{"x":-90,"y":1,"radius":14},{"x":-113,"y":2,"radius":11},{"x":-128,"y":1,"radius":7},{"x":-89,"y":66,"radius":13},{"x":68,"y":73,"radius":10},{"x":48,"y":74,"radius":10},{"x":29,"y":72,"radius":10},{"x":-62,"y":38,"radius":15},{"x":16,"y":59,"radius":10},{"x":-71,"y":58,"radius":9},{"x":12,"y":44,"radius":8}]
  ];

  $('#gameCanvas').powerCanvas({init: function(canvas) {
    var I = {
      sprite: animation
    };

    var character = GameObject(I).extend({
      getCircles: function() {
        var transform = this.getTransform();

        return $.map(frameCircles[currentFrame], function(circle) {
          var point = transform.transformPoint(circle);
          return {
            x: point.x,
            y: point.y,
            radius: circle.radius,
            circle: circle
          };
        });
      },

      getTransform: function() {
        return transform;
      },

      draw: function(canvas) {
        I.sprite.frame(currentFrame);

        canvas.withTransform(this.getTransform(), function() {
          I.sprite.draw(canvas,
            -I.sprite.width / 2,
            -I.sprite.height / 2
          );
        });

        $.each(this.getCircles(), function(i, circle) {
          var color = (circle.circle == activeCircle ? activeColor : circleColor);
          canvas.fillCircle(circle.x, circle.y, circle.radius, color);
        });
      }
    });

    setInterval(function() {
      canvas.fill('#000');
      character.draw(canvas);
    }, 33);

    canvas.click(function(e) {
      var point = {
        x: event.offsetX,
        y: event.offsetY
      };

      console.log(point);

      var set = false;

      // Check which circle was hit
      $.each(character.getCircles(), function(i, circle) {
        if(set) {
          return;
        }

        console.log(circle);
        var dx = point.x - circle.x;
        var dy = point.y - circle.y;
        var dist = circle.radius;

        console.log(dx);
        console.log(dy);
        console.log(dist);

        if(dx * dx + dy * dy < dist * dist) {
          activeCircle = circle.circle;
          set = true;
        }

        console.log(activeCircle);
      });

      if(!set) {
        activeCircle = undefined;
      }
    });

  }});

  function nextFrame() {
    activeCircle = undefined;
    currentFrame++;

    if(currentFrame == animation.frameCount()) {
      currentFrame = 0;
    } else if(currentFrame >= frameCircles.length) {
      // Copy first frame of hit circles
      var copy = frameCircles[0].slice(0).map(function(circle) {
        return {
          x: circle.x,
          y: circle.y,
          radius: circle.radius
        };
      });

      frameCircles.push(copy);
    }
  }

  function previousFrame() {
    if(currentFrame > 0) {
      currentFrame--;
    }
  }

  function addCircle() {
    activeCircle = {
      x: 0,
      y: 0,
      radius: 50
    };
    frameCircles[currentFrame].push(activeCircle);
  }

  function removeCircle() {
    frameCircles[currentFrame].remove(activeCircle);
  }

  function move(x, y) {
    if(activeCircle) {
      activeCircle.x += x;
      activeCircle.y += y;
    }
  }

  function grow(delta) {
    if(activeCircle) {
      activeCircle.radius = Math.clamp(delta + activeCircle.radius, 1, 1000);
    }
  }

  keyEvents = {
    "left": function() {
      move(-1, 0);
    },
    "right": function() {
      move(1, 0);
    },
    "up": function() {
      move(0, -1);
    },
    "down": function() {
      move(0, 1);
    },
    "+": function() {
      grow(1);
    },
    "-": function() {
      grow(-1);
    },
    "shift+left": function() {
      move(-10, 0);
    },
    "shift+right": function() {
      move(10, 0);
    },
    "shift+up": function() {
      move(0, -10);
    },
    "shift+down": function() {
      move(0, 10);
    },
    "shift++": function() {
      grow(10);
    },
    "shift+-": function() {
      grow(-10);
    },
  }

  $.each(keyEvents, function(key, fn) {
    $(document).bind('keydown', key, fn);
  });

  $('.ui').bind('click', function() {
    if ($(this).attr('value') === 'increase') {
      grow(1);
    }
    if ($(this).attr('value') === 'decrease') {
      grow(-1);
    }
    if ($(this).attr('value') === 'up') {
      move(0,-1);
    }
    if ($(this).attr('value') === 'down') {
      move(0,1);
    }
    if ($(this).attr('value') === 'left') {
      move(-1,0);
    }
    if ($(this).attr('value') === 'right') {
      move(1,0);
    }
  });

  $("<input type='button' value='Add Circle'/>").click(function() {
    addCircle();
  }).appendTo($("#controls"));

  $("<input type='button' value='Remove Circle' />").click(function() {
    removeCircle();
  }).appendTo($("#controls"));

  $("<input type='button' value='Next Frame'/>").click(function() {
    nextFrame();
  }).appendTo($("#controls"));

  $("<input type='button' value='Previous Frame' />").click(function() {
    previousFrame();
  }).appendTo($("#controls"));