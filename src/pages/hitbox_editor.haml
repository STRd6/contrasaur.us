#title
  %h1 Hitbox Editor

#game_container
  #game_info
    %span#health_label health
    #progress_bar
      #health
    #score_holder
      %span#score_label score
      %span#score 0
  %canvas#gameCanvas{:width => 640, :height => 480}
    %p
      HTML5 canvas not supported by your browser.
      = link "Learn more here", "http://www.google.com/chrome"

#controls
  %input.ui{:type => 'button', :value => 'increase'}
  %input.ui{:type => 'button', :value => 'decrease'}
  %input.ui{:type => 'button', :value => 'increase+'}
  %input.ui{:type => 'button', :value => 'decrease-'}

= text_field "dataUrl", "javascripts/data/bite.animation.json"
%button#loadImage Load
= "|"
%button#export Export

:javascript
  var transform = Matrix.translation(320, 240);
  var animation;
  var animationJSON;
  var currentFrame = 0;
  var activeCircle;
  var activeColor = "rgba(255, 0, 255, 0.5)";
  var circleColor = "rgba(255, 0, 0, 0.5)";
  var frameCircles = [
    [{"x":106,"y":-31,"radius":27},{"x":-70,"y":8,"radius":18},{"x":-92,"y":15,"radius":16},{"x":74,"y":-26,"radius":14},{"x":62,"y":-39,"radius":19},{"x":83,"y":-51,"radius":18},{"x":-116,"y":21,"radius":12},{"x":-1,"y":1,"radius":41},{"x":39,"y":-27,"radius":19},{"x":-41,"y":0,"radius":26},{"x":-136,"y":23,"radius":9},{"x":-21,"y":34,"radius":13},{"x":-35,"y":40,"radius":9},{"x":-46,"y":53,"radius":8},{"x":-46,"y":66,"radius":8},{"x":-43,"y":83,"radius":11},{"x":-25,"y":88,"radius":7},{"x":-9,"y":88,"radius":10},{"x":23,"y":31,"radius":15},{"x":16,"y":50,"radius":9},{"x":15,"y":67,"radius":9},{"x":27,"y":80,"radius":9},{"x":43,"y":89,"radius":9},{"x":60,"y":89,"radius":8},{"x":77,"y":88,"radius":10},{"x":60,"y":24,"radius":8},{"x":53,"y":12,"radius":7},{"x":43,"y":2,"radius":8}],[{"x":106,"y":-29,"radius":16},{"x":-70,"y":12,"radius":18},{"x":-92,"y":21,"radius":16},{"x":70,"y":-19,"radius":14},{"x":62,"y":-39,"radius":19},{"x":88,"y":-47,"radius":15},{"x":-116,"y":28,"radius":13},{"x":-1,"y":1,"radius":41},{"x":39,"y":-27,"radius":19},{"x":-41,"y":0,"radius":26},{"x":-136,"y":30,"radius":9},{"x":-21,"y":34,"radius":13},{"x":-35,"y":40,"radius":9},{"x":-46,"y":53,"radius":8},{"x":-46,"y":66,"radius":8},{"x":-43,"y":83,"radius":11},{"x":-25,"y":88,"radius":7},{"x":-9,"y":88,"radius":10},{"x":23,"y":31,"radius":15},{"x":16,"y":50,"radius":9},{"x":15,"y":67,"radius":9},{"x":27,"y":80,"radius":9},{"x":43,"y":89,"radius":9},{"x":60,"y":89,"radius":8},{"x":77,"y":88,"radius":10},{"x":55,"y":17,"radius":8},{"x":53,"y":8,"radius":7},{"x":43,"y":2,"radius":8},{"x":86,"y":-1,"radius":12},{"x":97,"y":8,"radius":12},{"x":117,"y":-23,"radius":15}],[{"x":97,"y":-63,"radius":18},{"x":-70,"y":16,"radius":18},{"x":-92,"y":24,"radius":16},{"x":82,"y":-25,"radius":14},{"x":51,"y":-63,"radius":19},{"x":68,"y":-77,"radius":17},{"x":-116,"y":33,"radius":12},{"x":-2,"y":-1,"radius":40},{"x":31,"y":-42,"radius":17},{"x":-41,"y":3,"radius":26},{"x":-136,"y":36,"radius":9},{"x":-21,"y":34,"radius":13},{"x":-35,"y":40,"radius":9},{"x":-46,"y":53,"radius":8},{"x":-46,"y":66,"radius":8},{"x":-43,"y":83,"radius":11},{"x":-25,"y":88,"radius":7},{"x":-9,"y":88,"radius":10},{"x":23,"y":31,"radius":15},{"x":16,"y":50,"radius":9},{"x":15,"y":67,"radius":9},{"x":27,"y":80,"radius":9},{"x":43,"y":89,"radius":9},{"x":60,"y":89,"radius":8},{"x":77,"y":88,"radius":10},{"x":48,"y":0,"radius":8},{"x":64,"y":-38,"radius":12}],[{"x":93,"y":-66,"radius":19},{"x":-70,"y":16,"radius":18},{"x":-92,"y":26,"radius":16},{"x":78,"y":-28,"radius":15},{"x":47,"y":-67,"radius":19},{"x":63,"y":-80,"radius":16},{"x":-116,"y":33,"radius":13},{"x":-1,"y":-1,"radius":41},{"x":31,"y":-46,"radius":18},{"x":-41,"y":4,"radius":26},{"x":-136,"y":37,"radius":9},{"x":-21,"y":34,"radius":13},{"x":-35,"y":40,"radius":9},{"x":-46,"y":53,"radius":8},{"x":-46,"y":66,"radius":8},{"x":-43,"y":83,"radius":11},{"x":-25,"y":88,"radius":7},{"x":-9,"y":88,"radius":10},{"x":23,"y":31,"radius":15},{"x":16,"y":50,"radius":9},{"x":15,"y":67,"radius":9},{"x":27,"y":80,"radius":9},{"x":43,"y":89,"radius":9},{"x":60,"y":89,"radius":8},{"x":77,"y":88,"radius":10},{"x":46,"y":-3,"radius":8},{"x":59,"y":-42,"radius":11}],[{"x":109,"y":51,"radius":24},{"x":-66,"y":-30,"radius":16},{"x":-91,"y":-30,"radius":14},{"x":81,"y":30,"radius":14},{"x":92,"y":13,"radius":19},{"x":103,"y":19,"radius":18},{"x":-115,"y":-26,"radius":12},{"x":2,"y":4,"radius":37},{"x":53,"y":6,"radius":21},{"x":-41,"y":-26,"radius":19},{"x":-134,"y":-26,"radius":9},{"x":-17,"y":36,"radius":13},{"x":-33,"y":43,"radius":9},{"x":-42,"y":55,"radius":8},{"x":-46,"y":66,"radius":8},{"x":-46,"y":84,"radius":11},{"x":-28,"y":88,"radius":7},{"x":-10,"y":88,"radius":10},{"x":28,"y":35,"radius":15},{"x":18,"y":48,"radius":9},{"x":12,"y":65,"radius":9},{"x":25,"y":78,"radius":9},{"x":42,"y":88,"radius":9},{"x":59,"y":89,"radius":8},{"x":77,"y":88,"radius":10}],[{"x":113,"y":54,"radius":24},{"x":-64,"y":-30,"radius":15},{"x":-89,"y":-31,"radius":14},{"x":85,"y":32,"radius":14},{"x":93,"y":15,"radius":19},{"x":106,"y":21,"radius":18},{"x":-112,"y":-30,"radius":12},{"x":1,"y":1,"radius":35},{"x":66,"y":12,"radius":17},{"x":-38,"y":-26,"radius":20},{"x":-131,"y":-31,"radius":9},{"x":-16,"y":36,"radius":13},{"x":-31,"y":44,"radius":9},{"x":-42,"y":53,"radius":7},{"x":-46,"y":66,"radius":8},{"x":-45,"y":85,"radius":11},{"x":-27,"y":88,"radius":7},{"x":-10,"y":88,"radius":10},{"x":29,"y":36,"radius":15},{"x":19,"y":52,"radius":9},{"x":14,"y":68,"radius":9},{"x":27,"y":80,"radius":9},{"x":43,"y":89,"radius":9},{"x":60,"y":89,"radius":8},{"x":77,"y":88,"radius":10},{"x":7,"y":38,"radius":10},{"x":44,"y":7,"radius":25}],[{"x":126,"y":9,"radius":25},{"x":-70,"y":4,"radius":18},{"x":-92,"y":9,"radius":16},{"x":94,"y":7,"radius":14},{"x":93,"y":-14,"radius":19},{"x":106,"y":-16,"radius":18},{"x":-116,"y":7,"radius":12},{"x":5,"y":4,"radius":37},{"x":45,"y":-4,"radius":20},{"x":-41,"y":0,"radius":26},{"x":-136,"y":3,"radius":9},{"x":-21,"y":34,"radius":13},{"x":-34,"y":44,"radius":9},{"x":-45,"y":54,"radius":8},{"x":-48,"y":66,"radius":8},{"x":-48,"y":81,"radius":11},{"x":-32,"y":88,"radius":7},{"x":-13,"y":88,"radius":10},{"x":23,"y":30,"radius":15},{"x":16,"y":50,"radius":9},{"x":15,"y":65,"radius":9},{"x":29,"y":79,"radius":9},{"x":43,"y":89,"radius":9},{"x":60,"y":89,"radius":8},{"x":77,"y":88,"radius":10},{"x":46,"y":36,"radius":8},{"x":50,"y":27,"radius":7},{"x":40,"y":21,"radius":8},{"x":70,"y":-7,"radius":16}],[{"x":106,"y":-31,"radius":27},{"x":-70,"y":8,"radius":18},{"x":-92,"y":15,"radius":16},{"x":74,"y":-26,"radius":14},{"x":62,"y":-39,"radius":19},{"x":83,"y":-51,"radius":18},{"x":-116,"y":21,"radius":12},{"x":-1,"y":1,"radius":41},{"x":39,"y":-27,"radius":19},{"x":-41,"y":0,"radius":26},{"x":-136,"y":23,"radius":9},{"x":-21,"y":34,"radius":13},{"x":-35,"y":40,"radius":9},{"x":-46,"y":53,"radius":8},{"x":-46,"y":66,"radius":8},{"x":-43,"y":83,"radius":11},{"x":-25,"y":88,"radius":7},{"x":-9,"y":88,"radius":10},{"x":23,"y":31,"radius":15},{"x":16,"y":50,"radius":9},{"x":15,"y":67,"radius":9},{"x":27,"y":80,"radius":9},{"x":43,"y":89,"radius":9},{"x":60,"y":89,"radius":8},{"x":77,"y":88,"radius":10},{"x":60,"y":24,"radius":8},{"x":53,"y":12,"radius":7},{"x":43,"y":2,"radius":8}]
  ];

  $('#gameCanvas').powerCanvas({init: function(canvas) {
    var character = GameObject().extend({
      getCircles: function() {
        var transform = this.getTransform();

        return $.map(frameCircles[currentFrame], function(circle) {
          var point = transform.transformPoint(circle);
          return {
            x: point.x,
            y: point.y,
            radius: circle.radius,
            circle: circle
          };
        });
      },

      getTransform: function() {
        return transform;
      },

      draw: function(canvas) {
        if(animation) {
          animation.frame(currentFrame);

          canvas.withTransform(this.getTransform(), function() {
            animation.draw(canvas,
              -animation.width / 2,
              -animation.height / 2
            );
          });
        }

        $.each(this.getCircles(), function(i, circle) {
          var color = (circle.circle == activeCircle ? activeColor : circleColor);
          canvas.fillCircle(circle.x, circle.y, circle.radius, color);
        });
      }
    });

    setInterval(function() {
      canvas.fill('#000');
      character.draw(canvas);
    }, 33);

    canvas.click(function(e) {
      var point = {
        x: event.offsetX,
        y: event.offsetY
      };

      var set = false;

      // Check which circle was hit
      $.each(character.getCircles(), function(i, circle) {
        if(set) {
          return;
        }

        var dx = point.x - circle.x;
        var dy = point.y - circle.y;
        var dist = circle.radius;

        if(dx * dx + dy * dy < dist * dist) {
          activeCircle = circle.circle;
          set = true;
        }

      });

      if(!set) {
        activeCircle = undefined;
      }
    });

  }});

  function nextFrame() {
    activeCircle = undefined;
    currentFrame++;

    if(currentFrame == animation.frameCount()) {
      currentFrame = 0;
    } else if(currentFrame >= frameCircles.length) {
      // Copy first frame of hit circles
      var copy = frameCircles[0].slice(0).map(function(circle) {
        return {
          x: circle.x,
          y: circle.y,
          radius: circle.radius
        };
      });

      frameCircles.push(copy);
    }
  }

  function previousFrame() {
    if(currentFrame > 0) {
      currentFrame--;
    }
  }

  function addCircle() {
    activeCircle = {
      x: 0,
      y: 0,
      radius: 50
    };
    frameCircles[currentFrame].push(activeCircle);
  }

  function removeCircle() {
    frameCircles[currentFrame].remove(activeCircle);
  }

  function nextCircle() {
    var index = frameCircles[currentFrame].indexOf(activeCircle);
    console.log(index);
    index = Math.mod((index - 1), frameCircles[currentFrame].length);
    console.log(index);
    activeCircle = frameCircles[currentFrame][index];
  }

  function nextCircle() {
    var index = frameCircles[currentFrame].indexOf(activeCircle);
    console.log(index);
    index = (index + 1) % frameCircles[currentFrame].length;
    console.log(index);
    activeCircle = frameCircles[currentFrame][index];
  }

  function move(x, y) {
    if(activeCircle) {
      activeCircle.x += x;
      activeCircle.y += y;
    }
  }

  function grow(delta) {
    if(activeCircle) {
      activeCircle.radius = Math.clamp(delta + activeCircle.radius, 1, 1000);
    }
  }

  keyEvents = {
    "+": function() {
      grow(1);
    },
    "-": function() {
      grow(-1);
    },
    "up": function() {
      move(0, -1);
    },
    "down": function() {
      move(0, 1);
    },
    "left": function() {
      move(-1, 0);
    },
    "right": function() {
      move(1, 0);
    },
    "shift+left": function() {
      move(-10, 0);
    },
    "shift+right": function() {
      move(10, 0);
    },
    "shift+up": function() {
      move(0, -10);
    },
    "shift+down": function() {
      move(0, 10);
    },
    "shift++": function() {
      grow(10);
    },
    "shift+-": function() {
      grow(-10);
    },
    "shift+tab": function() {
      prevCircle();
      return false;
    },
    "tab": function() {
      nextCircle();
      return false;
    },
    "d": function() {
      removeCircle();
    }
  }

  $.each(keyEvents, function(key, fn) {
    $(document).bind('keydown', key, fn);
  });

  $('.ui').bind('click', function() {
    if ($(this).attr('value') === 'increase') {
      grow(1);
    }
    if ($(this).attr('value') === 'decrease') {
      grow(-1);
    }
    if ($(this).attr('value') === 'increase+') {
      grow(5);
    }
    if ($(this).attr('value') === 'decrease-') {
      grow(-5);
    }
  });

  $("<input type='button' value='Add Circle'/>").click(function() {
    addCircle();
  }).appendTo($("#controls"));

  $("<input type='button' value='Remove Circle' />").click(function() {
    removeCircle();
  }).appendTo($("#controls"));

  $("<input type='button' value='Previous Frame' />").click(function() {
    previousFrame();
  }).appendTo($("#controls"));

  $("<input type='button' value='Next Frame'/>").click(function() {
    nextFrame();
  }).appendTo($("#controls"));

  function loadAnimationJSON(url) {
    Animation.loadJSONUrl(url, function(a, data) {
      animation = a;
      currentFrame = a.frame();
      animationJSON = data;
    });
  };

  $("#loadImage").click(function() {
    var url = $(this).prev().val();

    loadAnimationJSON(url);
  }).click();

  $("#export").click(function() {
    alert(JSON.stringify({
      animation: animationJSON,
      hitFrames: frameCircles
    }, null, 2));
  });
